<h1><%= @question.title %></h1>
<p><%= @question.body %></p>
<!-- <p><strong>Subject:</strong> <%= @question.subject.name if @question.subject %></p> -->
<!-- if subject is nil don't run name -->
<p><strong>Subject:</strong> <%= @question.subject&.name %></p>


<!-- edit_question_path needs id so pass in @question -->
<%= link_to 'Edit', edit_question_path(@question) %>

<!-- link_to by default sends a get request, so it gets intercepted -->
<!-- <%= link_to 'Delete', question_path(@question) %> -->

<%# Rails enables us to make links end non-GET requests by setting the
    `method` attribute for `link_to`. Rails uses Javascript to accomplish that. %>
<%= link_to 'Delete', question_path(@question),
                      method: :delete,
                      data: { confirm: 'Are you sure?'} %>

<h2>Answers</h2>

<%= @answer.errors.full_messages.join(', ') %>
<%# action=/questions/:question_id/answers %>
<%= form_for [ @question, @answer ] do |f| %>
  <%= f.text_area :body %>
  <%= f.submit %>
  <% end %>

  <hr />

<!-- should be answers but based on typo before its answer now -->
<% @question.answers.each do |answer| %>
  <p><%= answer.body %></p>

  <%= link_to(
    'Delete', question_answer_path(@question, answer), method: :delete, data: {confirm: 'Are you sure?'}
    ) %>

  <hr />
<% end %>
